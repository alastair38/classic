---
import IconGridCTA from '@components/cta/IconGridCTA.astro';
import Hero from '@components/featured/Hero.astro';
import Section from '@components/utilities/Section.astro';
import { getEntry } from 'astro:content';
import BasicCTA from '@components/cta/BasicCTA.astro';
import WithIconCTA from '@components/cta/WithIconCTA.astro';
import Separator from '@components/utilities/Separator.astro';
import Dialog from '@components/utilities/Dialog.astro';
import Search from '@components/utilities/Search.astro';

const entry = await getEntry('pages', '/');
---

<div
  id="home"
  class="flexflex-col grid grid-cols-mobile md:grid-cols-main gap-y-12 md:gap-y-24"
>
  {
    entry.data.hero && (
      <Hero
        img={entry.data.hero.img}
        imgAlt={entry.data.hero.imgAlt}
        shadow={entry.data.hero.shadow}
        background={entry.data.hero.background}
        textPosition={entry.data.hero.textPosition}
        imgSize={entry.data.hero.imgSize}
        textStyle={entry.data.hero.textStyle}
        linkStyle={entry.data.hero.linkStyle}
        linkTarget={entry.data.hero.linkTarget}
        fullWidth={entry.data.hero.fullWidth}
        duotone={entry.data.hero.duotone}
      />
    )
  }

  <section class="col-start-2">
    <button popovertarget="my-popover" class="border rounded-md px-3 py-1"
      >Open Popover</button
    >
  </section>

  {
    entry.data.basicCTA && (
      <Section type="section" width="small">
        <BasicCTA
          heading={entry.data.basicCTA.heading}
          byline={entry.data.basicCTA.byline}
          layout={entry.data.basicCTA.layout}
          shadow={entry.data.basicCTA.shadow}
          imgContain={entry.data.basicCTA.imgContain}
          img={entry.data.basicCTA.img}
          imgAlt={entry.data.basicCTA.imgAlt}
          linkStyle={entry.data.basicCTA.linkStyle}
          linkTarget={entry.data.basicCTA.linkTarget}
          linkText={entry.data.basicCTA.linkText}
        />
      </Section>
    )
  }
  <Separator icon="lightbulb-line" iconBorder={false} />

  {
    entry.data.withIconCTA && (
      <Section
        type="section"
        width="medium"
        layout="grid"
        heading="Our services"
      >
        {entry.data.withIconCTA.map(cta => (
          <WithIconCTA
            title={cta.title}
            headingLevel="h3"
            byline={cta.byline}
            layout={cta.layout}
            iconShape={cta.iconShape}
            icon={cta.icon}
            background={cta.background}
            link={cta.link}
          />
        ))}
      </Section>
    )
  }

  <Section width="medium" spacing="large">
    <IconGridCTA border={true} layout="horizontal" />
  </Section>
</div>
